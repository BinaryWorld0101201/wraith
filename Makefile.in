#
#  This is the Makefile for EGGDROP (the irc bot)
#  You should never need to edit this.
#
# $Id: Makefile.in,v 1.31 1999/12/15 02:32:56 guppy Exp $

SHELL = /bin/sh
top_srcdir = @top_srcdir@

@SET_MAKE@
prefix = @prefix@
DEST = @DEST@
EGGEXEC = @EGGEXEC@
EGGVERSION = @EGGVERSION@
LEAFEXEC = leaf
HUBEXEC = hub

# things you can put here:
#   -Wall            if you're using gcc and it supports it
#                    (configure usually detects this anyway now)
#
#   -DDEBUG_ASSERT   to enable assert debugging
#   -DDEBUG_MEM      to be able to debug memory allocation (.debug)
#                    These can both be set by using 'make debug'
#                    or 'make sdebug'
CFLGS =

# configure SHOULD set these...you may need to tweak them to get modules
# to compile .. if you do...let the devel-team know the working settings
# btw to turn STRIP off, do 'STRIP = touch' not 'STRIP ='

# defaults
CC = @CC@
LD = @CC@
STRIP = @STRIP@
RANLIB = @RANLIB@

# make eggmod
MOD_CC = @MOD_CC@
MOD_LD = @MOD_LD@
MOD_STRIP = @MOD_STRIP@

# make modules
SHLIB_CC = @SHLIB_CC@
SHLIB_LD = @SHLIB_LD@
SHLIB_STRIP = @SHLIB_STRIP@

# programs make install uses
LN_S = @LN_S@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

# STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP #
# - - - - - - - - do not edit anything below this line. - - - - - - - - #
# - - - - - - - - -  it's all done by configure now.  - - - - - - - - - #
# STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP #

# stuff for Tcl
XREQS = @TCL_REQS@
XLIBS = @TCL_LIBS@ @LIBS@
TCLLIB = @TCLLIB@
TCLLIBFN = @TCLLIBFN@

CFLAGS = @CFLAGS@ -I.. @DEFS@ $(CFLGS)
DEBCFLAGS = @CFLAGS@ -I.. @DEFS@ -DDEBUG_ASSERT -DDEBUG_MEM $(CFLGS)
MAKE_LEAF = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'STRIP=$(STRIP)' \
'RANLIB=$(RANLIB)' 'CFLAGS=$(CFLAGS) -DSTATIC -DLEAF' 'XREQS=$(XREQS)' \
'XLIBS=$(XLIBS)' 'EGGEXEC=$(LEAFEXEC)' 'EGGBUILD=(leaf)' 'LD=$(LD)' \
'MODS=$(MODSALL) $(MODSLEAF)'

MAKE_HUB = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'STRIP=$(STRIP)' \
'RANLIB=$(RANLIB)' 'CFLAGS=$(CFLAGS) -DSTATIC -DHUB' 'XREQS=$(XREQS)' \
'XLIBS=$(XLIBS)' 'EGGEXEC=$(HUBEXEC)' 'EGGBUILD=(hub)' 'LD=$(LD)' \
'MODS=$(MODSALL) $(MODSHUB)'

MAKE_UTILS = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'STRIP=$(STRIP)' \
'RANLIB=$(RANLIB)' 'CFLAGS=$(CFLAGS) -DSTATIC -DSTANDALONE' 'XREQS=$(XREQS)' \
'XLIBS=$(XLIBS)' 'LD=$(LD)'

MAKE_DUTILS = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'STRIP=touch' \
'RANLIB=$(RANLIB)' 'CFLAGS=-g3 $(DEBCFLAGS) -DSTATIC -DSTANDALONE' 'XREQS=$(XREQS)' \
'XLIBS=$(XLIBS)' 'LD=$(LD)'

MAKE_DLEAF = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'STRIP=touch' \
'RANLIB=$(RANLIB)' 'CFLAGS=-g3 $(DEBCFLAGS) -DSTATIC -DLEAF' 'XREQS=$(XREQS)' \
'XLIBS=$(XLIBS)' 'EGGEXEC=$(LEAFEXEC)' 'EGGBUILD=(debug leaf)' 'LD=$(LD) -g' \
'MODS=$(MODSALL) $(MODSLEAF)'

MAKE_DHUB = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'STRIP=touch' \
'RANLIB=$(RANLIB)' 'CFLAGS=-g3 $(DEBCFLAGS) -DSTATIC -DHUB' 'XREQS=$(XREQS)' \
'XLIBS=$(XLIBS)' 'EGGEXEC=$(HUBEXEC)' 'EGGBUILD=(debug hub)' 'LD=$(LD) -g' \
'MODS=$(MODSALL) $(MODSHUB)'

MAKE_DEPEND = $(MAKE) 'MAKE=$(MAKE)' 'CC=$(CC)' 'LD=$(LD)' \
'STRIP=$(STRIP)' 'CFLAGS=$(CFLAGS)' 'CPPFLAGS=$(CPPFLAGS)'

MAKE_INSTALL = $(MAKE) 'MAKE=$(MAKE)' 'DEST=$(DEST)'

all: @DEFAULT_MAKE@

clean: cleanutils
	@rm -f $(HUBEXEC) $(LEAFEXEC) *.so *.stamp core DEBUG *~ key
	@cd src; $(MAKE) clean
	@cd src/md5; $(MAKE) clean

cleanutils: 
	@rm -f makebot stringfix makepack readlog

distclean: clean
	@rm -f Makefile scripts/Makefile src/Makefile src/md5/Makefile src/mod/Makefile
	@rm -f config.cache config.log config.status config.h lush.h stamp.*

distrib: distclean
	@rm -f `find . \( -name '*~' -o -name '*#' -o -name '*.orig' \
		-o -name '*.rej' -o -name '*.bak' \) -print`
	@rm -rf `find . \( -name 'CVS' \) -print`
	@(echo "all:"; \
	echo "	@echo \"\""; \
	echo "	@echo \"Before you can compile your bot you have to configure it.\""; \
	echo "	@echo \"So please start the configure script now:\""; \
	echo "	@echo \"\""; \
	echo "	@echo \" % ./configure\""; \
	echo "	@echo \"\""; ) > Makefile

depleaf:
	@cat /dev/null > lush.h
	@cd src; $(MAKE_DEPEND) depleaf
	@cd src/md5; $(MAKE_DEPEND) depleaf

dephub:
	@cat /dev/null > lush.h
	@cd src; $(MAKE_DEPEND) dephub
	@cd src/md5; $(MAKE_DEPEND) dephub

leaf: 	
	@echo ""
	@echo "Making leaf"
	@echo ""
	@./maketype leaf
	@echo ""
	@rm -f src/bd.h
	@cd src; $(MAKE_LEAF) $(LEAFEXEC)
	@rm -f src/bd.h
	@echo ""


dleaf: 	
	@echo ""
	@echo "Making debug leaf"
	@echo ""
	@./maketype leaf
	@echo ""
	@rm -f src/bd.h
	@cd src; $(MAKE_DLEAF) $(LEAFEXEC)
	@rm -f src/bd.h
	@echo ""


hub: 	
	@echo ""
	@echo "Making hub"
	@echo ""
	@./maketype hub
	@echo ""
	@rm -f src/bd.h
	@cd src; $(MAKE_HUB) $(HUBEXEC)
	@rm -f src/bd.h
	@echo ""


dhub: 	
	@echo ""
	@echo "Making debug hub"
	@echo ""
	@./maketype hub
	@echo ""
	@rm -f src/bd.h
	@cd src; $(MAKE_DHUB) $(HUBEXEC)
	@rm -f src/bd.h
	@echo ""


modedep:
	@for s in `grep -l "def [H|L][U|E][B|A]" \`find src -iname \\\*.c\``;\
	 do os="`echo $$s | sed s/\\\.c/\\\.o/g`"; if test -f $$os; then \
	 if test "`file $$os | grep ELF`"; then echo "deleting $$os"; rm $$os; \
	 fi; fi; done

utils:
	@./maketype utils
	@cd src; $(MAKE_UTILS) ../stringfix 
	@cd src; $(MAKE_UTILS) ../makebot 
	@cd src; $(MAKE_UTILS) ../makepack
	@cd src; $(MAKE_UTILS) ../readlog

dutils:
	@./maketype utils
	@cd src; $(MAKE_DUTILS) ../stringfix 
	@cd src; $(MAKE_DUTILS) ../makebot 
	@cd src; $(MAKE_DUTILS) ../makepack
	@cd src; $(MAKE_DUTILS) ../readlog

#safety hash
















