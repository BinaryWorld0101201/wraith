# Makefile for src/

SHELL = @SHELL@
top_srcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

@SET_MAKE@

CXXFLAGS = @CXXFLAGS@ -I. -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_srcdir)/pack @DEFS@ $(INCLUDES) $(CFLGS) '-DCOMMIT="$(COMMIT)"' '-DBRANCH="$(BRANCH)"' -DBUILDTS=$(BUILDTS) '-DVERSION="$(VERSION)"'
CPPFLAGS = @CPPFLAGS@

depcomp = /bin/sh $(top_srcdir)/build/autotools/depcomp

OBJCOPY = @OBJCOPY@

OBJS = auth.o \
	base64.o \
	binary.o \
	binds.o \
	bg.o \
	botcmd.o \
	botmsg.o \
	botnet.o \
	chanprog.o \
	cmds.o \
	core_binds.o \
	conf.o \
	crypt.o \
	dcc.o \
	dccutil.o \
	debug.o \
	dl.o \
	egg_timer.o \
	enclink.o \
	EncryptedStream.o \
	flags.o \
	garble.o \
	libcrypto.o \
	libssl.o \
	libtcl.o \
	log.o \
	main.o \
	match.o \
	misc.o \
	misc_file.o \
	net.o \
	openssl.o \
	adns.o \
	response.o \
	rfc1459.o \
	set.o \
	shell.o \
	socket.o \
	sprintf.o \
	userent.o \
	userrec.o \
	users.o

MODOBJS = mod/channels.o \
        mod/console.o \
        mod/ctcp.o \
        mod/irc.o \
        mod/server.o \
        mod/share.o \
        mod/transfer.o \
        mod/update.o


MAKE_GENERIC = $(MAKE) 'MAKE=$(MAKE)' 'MAKEFLAGS=$(MAKEFLAGS)' 'CXX=$(CXX)' 'LD=$(LD)' 'STRIP=$(STRIP)' 'CFLGS=$(CFLGS)' 'CCDEPMODE=$(CCDEPMODE)'

blah:
	@echo ""
	@echo "Use the build script."
	@echo ""

makeres: makeres.c ../lib/bdlib/src/libbdlib.a
	@echo -e "Compiling: \033[1mmakeres\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/src/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

makeset: makeset.c ../lib/bdlib/src/libbdlib.a
	@echo -e "Compiling: \033[1mmakeset\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/src/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

makehelp: makehelp.c ../lib/bdlib/src/libbdlib.a
	@echo -e "Compiling: \033[1mmakehelp\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/src/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

sorthelp: sorthelp.c ../lib/bdlib/src/libbdlib.a
	@echo -e "Compiling: \033[1msorthelp\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/src/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

stringfix: stringfix.c common.h config.h eggdrop.h
	@echo -e "Compiling: \033[1mstringfix\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir) -I$(top_srcdir)/pack $(CPPFLAGS) $< -o stringfix
	@$(STRIP) $@@EXEEXT@

#../$(EGGEXEC): build_msg $(OBJS) mycrypto compatability
../$(EGGEXEC): build_msg $(OBJS) mycrypto compatability ../lib/bdlib/src/libbdlib.a
	@echo "[*] Linking"
	@echo ""
	@echo "Linking wraith... $(EGGBUILD)"
	@echo ""
	$(LD) -o ../$(EGGEXEC) $(OBJS) $(MODOBJS) compat/*.o crypto/*.o ../lib/bdlib/src/libbdlib.a $(LIBS)
#	$(LD) -o ../$(EGGEXEC) $(OBJS) $(MODOBJS) $(LIBS) compat/*.o crypto/*.o
	@$(STRIP) ../$(EGGEXEC)
	@$(OBJCOPY) ../$(EGGEXEC)
	@echo "Successful compile: $(EGGEXEC)"
	@echo ""

$(EGGEXEC): stringfix ../$(EGGEXEC)

clean:
	@rm -f .depend *.o *~ _*.c

build_msg:
	@echo "[*] Compiling core components"

compatability:
	@echo "[*] Compiling compatability components"
	+@cd compat && $(MAKE_GENERIC) compat

mycrypto:
	@echo "[*] Compiling crypto"
	+@cd crypto && $(MAKE_GENERIC) crypto

include ./.deps/includes

%.o: %.c stringfix@EXEEXT@ $(top_srcdir)/build/cc1plus
	@echo -e "Compiling: \033[1m$*\033[0m"
ifeq ($(CCDEPMODE),gcc3)
	if STRINGFIX='$(top_srcdir)/$(STRINGFIX)' $(CXX) -MT '$@' -MD -MP -MF '.deps/$*.TPo' -DSTRINGFIX=$(STRINGFIX) -B$(top_srcdir)/build $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@; then \
	mv '.deps/$*.TPo' '.deps/$*.Po'; \
	else rm -f '.deps/$*.Tpo'; exit 1; \
	fi
else
	# STRINGFIX included after CXX for ccache to recognize
	STRINGFIX="$(top_srcdir)/$(STRINGFIX)" libtool=no source='$<' object='$@' depfile='.deps/$*.Po' tmpdepfile='.deps/$*.TPo' depmode=$(CCDEPMODE) $(depcomp) \
	$(CXX) -DSTRINGFIX=$(STRINGFIX) -B$(top_srcdir)/build $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@
endif
