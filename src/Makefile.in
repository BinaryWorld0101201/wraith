# Makefile for src/

SHELL = @SHELL@
top_srcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

@SET_MAKE@

CXXFLAGS = @CXXFLAGS@ -I. -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_srcdir)/pack @DEFS@ $(INCLUDES) $(CFLGS) '-DCOMMIT="$(COMMIT)"' '-DBRANCH="$(BRANCH)"' -DBUILDTS=$(BUILDTS) '-DVERSION="$(VERSION)"'
CPPFLAGS = @CPPFLAGS@

include $(top_srcdir)/build/build.mk

OBJCOPY = @OBJCOPY@

OBJS = auth.So \
	base64.So \
	binary.So \
	binds.So \
	bg.So \
	botcmd.So \
	botmsg.So \
	botnet.So \
	chanprog.So \
	cmds.So \
	core_binds.So \
	conf.So \
	crypt.So \
	dcc.So \
	dccutil.So \
	debug.So \
	dl.So \
	egg_timer.So \
	enclink.So \
	EncryptedStream.So \
	flags.So \
	garble.So \
	libcrypto.So \
	libssl.So \
	libtcl.So \
	log.So \
	main.So \
	match.So \
	misc.So \
	misc_file.So \
	net.So \
	openssl.So \
	adns.So \
	response.So \
	rfc1459.So \
	set.So \
	shell.So \
	socket.So \
	sprintf.So \
	userent.So \
	userrec.So \
	users.So

MODOBJS = mod/channels.mod/channels.So \
        mod/console.mod/console.So \
        mod/ctcp.mod/ctcp.So \
        mod/irc.mod/irc.So \
        mod/server.mod/server.So \
        mod/share.mod/share.So \
        mod/transfer.mod/transfer.So \
        mod/update.mod/update.So


MAKE_GENERIC = $(MAKE) 'MAKE=$(MAKE)' 'MAKEFLAGS=$(MAKEFLAGS)' 'CXX=$(CXX)' 'LD=$(LD)' 'STRIP=$(STRIP)' 'CFLGS=$(CFLGS)' 'CCDEPMODE=$(CCDEPMODE)'

blah:
	@echo ""
	@echo "Use the build script."
	@echo ""

makeres: makeres.c ../lib/bdlib/libbdlib.a
	@echo -e "Compiling: \033[1mmakeres\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

makeset: makeset.c ../lib/bdlib/libbdlib.a
	@echo -e "Compiling: \033[1mmakeset\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

makehelp: makehelp.c ../lib/bdlib/libbdlib.a
	@echo -e "Compiling: \033[1mmakehelp\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

sorthelp: sorthelp.c ../lib/bdlib/libbdlib.a
	@echo -e "Compiling: \033[1msorthelp\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir)/src -I$(top_srcdir)/pack $(CPPFLAGS) $< ../lib/bdlib/libbdlib.a -o $@
	@$(STRIP) $@@EXEEXT@

stringfix: stringfix.c common.h config.h eggdrop.h
	@echo -e "Compiling: \033[1mstringfix\033[0m"
	@$(CXX) $(CXXFLAGS) -I$(top_srcdir) -I$(top_srcdir)/pack $(CPPFLAGS) $< -o stringfix
	@$(STRIP) $@@EXEEXT@

#../$(EGGEXEC): build_msg $(OBJS) mycrypto compatability
../$(EGGEXEC): build_msg $(OBJS) mycrypto compatability ../lib/bdlib/libbdlib.a
	@echo "[*] Linking"
	@echo ""
	@echo "Linking wraith... $(EGGBUILD)"
	@echo ""
	$(LD) -o ../$(EGGEXEC) $(OBJS) $(MODOBJS) compat/*.o crypto/*.o ../lib/bdlib/libbdlib.a $(LIBS)
#	$(LD) -o ../$(EGGEXEC) $(OBJS) $(MODOBJS) $(LIBS) compat/*.o crypto/*.o
	@$(STRIP) ../$(EGGEXEC)
	@$(OBJCOPY) ../$(EGGEXEC)
	@echo "Successful compile: $(EGGEXEC)"
	@echo ""

$(EGGEXEC): stringfix ../$(EGGEXEC)

clean:
	@rm -f .depend *.o *.So *~ _*.c

build_msg:
	@echo "[*] Compiling core components"

compatability:
	@echo "[*] Compiling compatability components"
	+@cd compat && $(MAKE_GENERIC) compat

mycrypto:
	@echo "[*] Compiling crypto"
	+@cd crypto && $(MAKE_GENERIC) crypto

include ./.deps/includes
